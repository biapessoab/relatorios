[{"/Users/anabeatrizbraz/Documents/Personal Projects/relatorios/src/index.js":"1","/Users/anabeatrizbraz/Documents/Personal Projects/relatorios/src/App.js":"2","/Users/anabeatrizbraz/Documents/Personal Projects/relatorios/src/pages/procedimentos.js":"3","/Users/anabeatrizbraz/Documents/Personal Projects/relatorios/src/pages/cirurgias.js":"4","/Users/anabeatrizbraz/Documents/Personal Projects/relatorios/src/pages/Forms.js":"5","/Users/anabeatrizbraz/Documents/Personal Projects/relatorios/src/pages/summary.jsx":"6","/Users/anabeatrizbraz/Documents/Personal Projects/relatorios/src/pages/document.js":"7"},{"size":255,"mtime":1691709543611,"results":"8","hashOfConfig":"9"},{"size":867,"mtime":1691709543608,"results":"10","hashOfConfig":"9"},{"size":10370,"mtime":1691781250433,"results":"11","hashOfConfig":"9"},{"size":9179,"mtime":1691709543612,"results":"12","hashOfConfig":"9"},{"size":2087,"mtime":1691709973747,"results":"13","hashOfConfig":"9"},{"size":12305,"mtime":1691713166726,"results":"14","hashOfConfig":"9"},{"size":9367,"mtime":1692053166973,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},"1le79hg",{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"19"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/anabeatrizbraz/Documents/Personal Projects/relatorios/src/index.js",[],[],[],"/Users/anabeatrizbraz/Documents/Personal Projects/relatorios/src/App.js",[],[],"/Users/anabeatrizbraz/Documents/Personal Projects/relatorios/src/pages/procedimentos.js",[],[],"/Users/anabeatrizbraz/Documents/Personal Projects/relatorios/src/pages/cirurgias.js",[],[],"/Users/anabeatrizbraz/Documents/Personal Projects/relatorios/src/pages/Forms.js",[],[],"/Users/anabeatrizbraz/Documents/Personal Projects/relatorios/src/pages/summary.jsx",["39"],[],"import React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nfunction Summary() {\n    const [procedimentos, setProcedimentos] = useState([]);\n    const [cirurgias, setCirurgias] = useState([]);\n    const [percentage, setPercentage] = useState(null);\n    const [desconto, setDesconto] = useState(null);\n    const [valorFinal, setValorFinal] = useState(0);\n    const [numParcelas, setNumParcelas] = useState(0);\n    const [maxDesconto, setMaxDesconto] = useState(0);\n    const [parcelasSelecionadas, setParcelasSelecionadas] = useState(0);\n    const [selectedPayment, setSelectedPayment] = useState('aVista');\n    const pagamento = document.getElementById('pagamento');\n\n    let sumProcedimentos = 0;\n    let sumCirurgias = 0;\n\n    useEffect(() => {\n        const procedimentosString = localStorage.getItem('procedimentos');\n        const procedimentos = JSON.parse(procedimentosString);\n        setProcedimentos(procedimentos);\n\n        const cirurgiasString = localStorage.getItem('cirurgias');\n        const cirurgias = JSON.parse(cirurgiasString);\n        setCirurgias(cirurgias);\n\n        if (percentage === null) {\n            setPercentage(0)\n        }\n\n        if (desconto === null) {\n            setDesconto(0)\n        }\n\n        const valorCalculado = (sumProcedimentos + sumCirurgias - desconto) * (1 - percentage / 100);\n        if (percentage >= 0 && percentage <= 10 && desconto <= 1000) {\n            setValorFinal(valorCalculado);\n        } else if (desconto <= 1000) {\n            setValorFinal(sumProcedimentos + sumCirurgias - desconto);\n        } else {\n            setValorFinal(sumProcedimentos + sumCirurgias);\n        }\n\n        if (sumProcedimentos < 12000) {\n            setNumParcelas(4)\n            setMaxDesconto(3.5)\n        }\n        else if (sumProcedimentos >= 12000 && sumProcedimentos < 25000) {\n            setNumParcelas(6)\n            setMaxDesconto(5)\n        } else {\n            setNumParcelas(10)\n            setMaxDesconto(10)\n        }\n\n        const pString = localStorage.getItem('password');\n        const p = JSON.parse(pString);\n\n        if (p === null) {\n            history.push(\"/\");\n        }\n\n    }, [desconto, percentage, sumProcedimentos, sumCirurgias, numParcelas, maxDesconto]);\n\n    const procedimentosFiltrados = procedimentos.filter(item => item.price > 0);\n    const cirurgiasFiltradas = cirurgias.filter(item => item.price > 0);\n\n    const submit = (e) => {\n        localStorage.setItem('pagamento', JSON.stringify(pagamento.value));\n        localStorage.setItem('soma', JSON.stringify(valorFinal));\n        localStorage.setItem('percentage', JSON.stringify(percentage));\n        localStorage.setItem('parcelasSelecionadas', JSON.stringify(parcelasSelecionadas));\n        localStorage.setItem('valorDesconto', JSON.stringify(sumCirurgias + sumProcedimentos - valorFinal));\n        e.preventDefault();\n        history.push('/document');\n    };\n\n    const history = useHistory();\n    const goToPreviousPage = () => {\n        history.push('/cirurgias');\n    };\n\n    return (\n        <div>\n            <div className=\"flex justify-center bg-green h-screen\">\n                <form className=\"pt-6\" onSubmit={submit} autoComplete='off' action='/document'>\n                    <div className=\"flex justify-center text-4xl text-white mb-6\">Resumo</div>\n                    {procedimentosFiltrados.length > 0 ?\n                        <div>\n                            <div className=\"my-4 text-lg underline text-white underline-offset-4\">Procedimentos</div>\n                            {procedimentosFiltrados.map((item, index) => {\n                                sumProcedimentos += item.price;\n                                return (\n                                    <div>\n                                        <div key={index} className=\"text-white\">\n                                            <p>{item.nome} ({item.quant}): R$ {item.price}</p>\n                                        </div>\n                                        <hr />\n                                    </div>\n                                );\n                            })}\n                            <div className='text-white text-end my-2 font-bold'>Soma = {parseFloat(sumProcedimentos).toFixed(2)}</div>\n                        </div>\n                        :\n                        <></>\n                    }\n                    {cirurgiasFiltradas.length > 0 ?\n                        <div>\n                            <div className=\"my-6 text-lg underline text-white underline-offset-4\">Cirurgias</div>\n                            {cirurgiasFiltradas.map((item, index) => {\n                                sumCirurgias += parseInt(item.price);\n                                return (\n                                    <div>\n                                        <div key={index} className=\"text-white\">\n                                            <p>{item.nome}: R$ {item.price}</p>\n                                        </div>\n                                        <hr />\n                                    </div>\n                                );\n                            })}\n                            <div className='text-white text-end my-2 font-bold'>Soma = {parseFloat(sumCirurgias).toFixed(2)}</div>\n                        </div>\n                        :\n                        <></>\n                    }\n\n                    {procedimentosFiltrados.length > 0 ?\n                        <div>\n                            <div className=\"mt-6 mb-2 text-lg underline text-white underline-offset-4\">Forma de Pagamento</div>\n                            <select\n                                name=\"pagamento\"\n                                id=\"pagamento\"\n                                className=\"bg-white rounded-md text-sm mr-10\"\n                                onChange={(e) => setSelectedPayment(e.target.value)}\n                            >\n                                <option value=\"aVista\">Ã€ vista</option>\n                                <option value=\"parcelado\">Parcelado</option>\n                            </select>\n\n                            {selectedPayment === 'aVista' ? (\n                                <>\n                                    <input\n                                        type=\"number\"\n                                        id=\"percentage\"\n                                        step=\"any\"\n                                        className=\"border rounded-md p-1 w-16 my-4 inline-block bg-white text-black h-6\"\n                                        value={percentage}\n                                        onChange={(e) => {\n                                            const newPercentage = parseFloat(e.target.value);\n                                            if (!isNaN(newPercentage) && newPercentage >= 0 && newPercentage <= 10 && newPercentage <= maxDesconto) {\n                                                setPercentage(newPercentage);\n                                            } else {\n                                                setPercentage(''); // Clear the input value if not valid\n                                            }\n                                        }}\n                                    />\n                                    <label className='text-white m-2'>%</label>\n                                </>\n                            ) : (\n                                <select\n                                    name=\"numeroParcelas\"\n                                    id=\"numeroParcelas\"\n                                    className=\"bg-white rounded-md text-sm\"\n                                    onChange={(e) => setParcelasSelecionadas(parseInt(e.target.value))}\n                                    value={parcelasSelecionadas}\n                                >\n                                    {/* OpÃ§Ãµes de 1 a 10 */}\n                                    {Array.from({ length: numParcelas }, (_, i) => (\n                                        <option key={i + 1} value={i + 1}>\n                                            {i + 1} parcela{i > 0 ? 's' : ''}\n                                        </option>\n                                    ))}\n                                </select>\n                            )}\n                        </div>\n                        :\n                        <div>\n                            <div className=\"mt-6 mb-2 text-lg underline text-white underline-offset-4\">NegociaÃ§Ã£o</div>\n                            <label className='text-white mr-2'>R$</label>\n                                    <input\n                                        type=\"number\"\n                                        id=\"desconto\"\n                                        className=\"border rounded-md p-1 w-12 my-4 inline-block bg-white text-black h-6 mr-20\"\n                                        max='1000'\n                                        onChange={(e) => setDesconto(parseInt(e.target.value))}\n                                    />\n\n                            <div className=\"mt-6 mb-2 text-lg underline text-white underline-offset-4\">Forma de Pagamento</div>\n                            <select\n                                name=\"pagamento\"\n                                id=\"pagamento\"\n                                className=\"bg-white rounded-md text-sm mr-10\"\n                                onChange={(e) => setSelectedPayment(e.target.value)} // Atualizar o estado ao selecionar uma opÃ§Ã£o\n                            >\n                                <option value=\"aVista\">Ã€ vista</option>\n                                <option value=\"parcelado\">Parcelado</option>\n                            </select>\n\n                            {/* Renderizar o input baseado na opÃ§Ã£o de pagamento selecionada */}\n                            {selectedPayment === 'aVista' ? (\n                                <>\n                                    <input\n                                        type=\"number\"\n                                        id=\"percentage\"\n                                        step=\"any\"\n                                        className=\"border rounded-md p-1 w-16 my-4 inline-block bg-white text-black h-6\"\n                                        onChange={(e) => {\n                                            if(e.target.value <= 5) {\n                                                setPercentage(e.target.value)\n                                            }\n                                        }}\n                                    />\n                                    <label className='text-white m-2'>%</label>\n                                </>\n                            ) : (\n                                <select\n                                    name=\"numeroParcelas\"\n                                    id=\"numeroParcelas\"\n                                    className=\"bg-white rounded-md text-sm\"\n                                    onChange={(e) => setParcelasSelecionadas(parseInt(e.target.value))}\n                                    value={parcelasSelecionadas}\n                                >\n                                    {Array.from({ length: 10 }, (_, i) => (\n                                        <option key={i + 1} value={i + 1}>\n                                            {i + 1} parcela{i > 0 ? 's' : ''}\n                                        </option>\n                                    ))}\n                                </select>\n                            )}\n                        </div>\n                    }\n                    <div className=\"mt-6 mb-2 text-lg underline text-white underline-offset-4\">Valor Final</div>\n                    <div className='text-white inline mr-14'>R$: {valorFinal.toFixed(2)}</div>\n\n                    <div className=\"flex justify-start text-white pt-4\">\n                        <button onClick={goToPreviousPage} className=\"border rounded-md p-2 mr-32\">Anterior</button>\n                        <input type=\"submit\" value=\"PrÃ³ximo\" className=\" border rounded-md p-1 cursor-pointer\" />\n                    </div>\n                </form>\n            </div >\n        </div >\n    );\n}\n\nexport default Summary;\n","/Users/anabeatrizbraz/Documents/Personal Projects/relatorios/src/pages/document.js",[],[],{"ruleId":"40","severity":1,"message":"41","line":64,"column":8,"nodeType":"42","endLine":64,"endColumn":88,"suggestions":"43"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["44"],{"desc":"45","fix":"46"},"Update the dependencies array to be: [desconto, percentage, sumProcedimentos, sumCirurgias, numParcelas, maxDesconto, history]",{"range":"47","text":"48"},[2192,2272],"[desconto, percentage, sumProcedimentos, sumCirurgias, numParcelas, maxDesconto, history]"]