{"ast":null,"code":"\"use client\";\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"default\", {\n  enumerable: true,\n  get: function () {\n    return _default;\n  }\n});\nconst _interop_require_default = require(\"@swc/helpers/_/_interop_require_default\");\nconst _interop_require_wildcard = require(\"@swc/helpers/_/_interop_require_wildcard\");\nconst _react = /*#__PURE__*/_interop_require_wildcard._(require(\"react\"));\nconst _head = /*#__PURE__*/_interop_require_default._(require(\"../shared/lib/head\"));\nconst _imageblursvg = require(\"../shared/lib/image-blur-svg\");\nconst _imageconfig = require(\"../shared/lib/image-config\");\nconst _imageconfigcontext = require(\"../shared/lib/image-config-context\");\nconst _warnonce = require(\"../shared/lib/utils/warn-once\");\nconst _imageloader = /*#__PURE__*/_interop_require_default._(require(\"next/dist/shared/lib/image-loader\"));\nconst configEnv = process.env.__NEXT_IMAGE_OPTS;\nconst allImgs = new Map();\nlet perfObserver;\nif (typeof window === \"undefined\") {\n  globalThis.__NEXT_IMAGE_IMPORTED = true;\n}\nconst VALID_LOADING_VALUES = [\"lazy\", \"eager\", undefined];\nfunction isStaticRequire(src) {\n  return src.default !== undefined;\n}\nfunction isStaticImageData(src) {\n  return src.src !== undefined;\n}\nfunction isStaticImport(src) {\n  return typeof src === \"object\" && (isStaticRequire(src) || isStaticImageData(src));\n}\nfunction getWidths(param, width, sizes) {\n  let {\n    deviceSizes,\n    allSizes\n  } = param;\n  if (sizes) {\n    // Find all the \"vw\" percent sizes used in the sizes prop\n    const viewportWidthRe = /(^|\\s)(1?\\d?\\d)vw/g;\n    const percentSizes = [];\n    for (let match; match = viewportWidthRe.exec(sizes); match) {\n      percentSizes.push(parseInt(match[2]));\n    }\n    if (percentSizes.length) {\n      const smallestRatio = Math.min(...percentSizes) * 0.01;\n      return {\n        widths: allSizes.filter(s => s >= deviceSizes[0] * smallestRatio),\n        kind: \"w\"\n      };\n    }\n    return {\n      widths: allSizes,\n      kind: \"w\"\n    };\n  }\n  if (typeof width !== \"number\") {\n    return {\n      widths: deviceSizes,\n      kind: \"w\"\n    };\n  }\n  const widths = [...new Set(\n  // > This means that most OLED screens that say they are 3x resolution,\n  // > are actually 3x in the green color, but only 1.5x in the red and\n  // > blue colors. Showing a 3x resolution image in the app vs a 2x\n  // > resolution image will be visually the same, though the 3x image\n  // > takes significantly more data. Even true 3x resolution screens are\n  // > wasteful as the human eye cannot see that level of detail without\n  // > something like a magnifying glass.\n  // https://blog.twitter.com/engineering/en_us/topics/infrastructure/2019/capping-image-fidelity-on-ultra-high-resolution-devices.html\n  [width, width * 2 /*, width * 3*/].map(w => allSizes.find(p => p >= w) || allSizes[allSizes.length - 1]))];\n  return {\n    widths,\n    kind: \"x\"\n  };\n}\nfunction generateImgAttrs(param) {\n  let {\n    config,\n    src,\n    unoptimized,\n    width,\n    quality,\n    sizes,\n    loader\n  } = param;\n  if (unoptimized) {\n    return {\n      src,\n      srcSet: undefined,\n      sizes: undefined\n    };\n  }\n  const {\n    widths,\n    kind\n  } = getWidths(config, width, sizes);\n  const last = widths.length - 1;\n  return {\n    sizes: !sizes && kind === \"w\" ? \"100vw\" : sizes,\n    srcSet: widths.map((w, i) => loader({\n      config,\n      src,\n      quality,\n      width: w\n    }) + \" \" + (kind === \"w\" ? w : i + 1) + kind).join(\", \"),\n    // It's intended to keep `src` the last attribute because React updates\n    // attributes in order. If we keep `src` the first one, Safari will\n    // immediately start to fetch `src`, before `sizes` and `srcSet` are even\n    // updated by React. That causes multiple unnecessary requests if `srcSet`\n    // and `sizes` are defined.\n    // This bug cannot be reproduced in Chrome or Firefox.\n    src: loader({\n      config,\n      src,\n      quality,\n      width: widths[last]\n    })\n  };\n}\nfunction getInt(x) {\n  if (typeof x === \"undefined\") {\n    return x;\n  }\n  if (typeof x === \"number\") {\n    return Number.isFinite(x) ? x : NaN;\n  }\n  if (typeof x === \"string\" && /^[0-9]+$/.test(x)) {\n    return parseInt(x, 10);\n  }\n  return NaN;\n}\n// See https://stackoverflow.com/q/39777833/266535 for why we use this ref\n// handler instead of the img's onLoad attribute.\nfunction handleLoading(img, src, placeholder, onLoadRef, onLoadingCompleteRef, setBlurComplete, unoptimized) {\n  if (!img || img[\"data-loaded-src\"] === src) {\n    return;\n  }\n  img[\"data-loaded-src\"] = src;\n  const p = \"decode\" in img ? img.decode() : Promise.resolve();\n  p.catch(() => {}).then(() => {\n    if (!img.parentElement || !img.isConnected) {\n      // Exit early in case of race condition:\n      // - onload() is called\n      // - decode() is called but incomplete\n      // - unmount is called\n      // - decode() completes\n      return;\n    }\n    if (placeholder === \"blur\") {\n      setBlurComplete(true);\n    }\n    if (onLoadRef == null ? void 0 : onLoadRef.current) {\n      // Since we don't have the SyntheticEvent here,\n      // we must create one with the same shape.\n      // See https://reactjs.org/docs/events.html\n      const event = new Event(\"load\");\n      Object.defineProperty(event, \"target\", {\n        writable: false,\n        value: img\n      });\n      let prevented = false;\n      let stopped = false;\n      onLoadRef.current({\n        ...event,\n        nativeEvent: event,\n        currentTarget: img,\n        target: img,\n        isDefaultPrevented: () => prevented,\n        isPropagationStopped: () => stopped,\n        persist: () => {},\n        preventDefault: () => {\n          prevented = true;\n          event.preventDefault();\n        },\n        stopPropagation: () => {\n          stopped = true;\n          event.stopPropagation();\n        }\n      });\n    }\n    if (onLoadingCompleteRef == null ? void 0 : onLoadingCompleteRef.current) {\n      onLoadingCompleteRef.current(img);\n    }\n    if (process.env.NODE_ENV !== \"production\") {\n      if (img.getAttribute(\"data-nimg\") === \"fill\") {\n        if (!unoptimized && (!img.getAttribute(\"sizes\") || img.getAttribute(\"sizes\") === \"100vw\")) {\n          let widthViewportRatio = img.getBoundingClientRect().width / window.innerWidth;\n          if (widthViewportRatio < 0.6) {\n            (0, _warnonce.warnOnce)('Image with src \"' + src + '\" has \"fill\" but is missing \"sizes\" prop. Please add it to improve page performance. Read more: https://nextjs.org/docs/api-reference/next/image#sizes');\n          }\n        }\n        if (img.parentElement) {\n          const {\n            position\n          } = window.getComputedStyle(img.parentElement);\n          const valid = [\"absolute\", \"fixed\", \"relative\"];\n          if (!valid.includes(position)) {\n            (0, _warnonce.warnOnce)('Image with src \"' + src + '\" has \"fill\" and parent element with invalid \"position\". Provided \"' + position + '\" should be one of ' + valid.map(String).join(\",\") + \".\");\n          }\n        }\n        if (img.height === 0) {\n          (0, _warnonce.warnOnce)('Image with src \"' + src + '\" has \"fill\" and a height value of 0. This is likely because the parent element of the image has not been styled to have a set height.');\n        }\n      }\n      const heightModified = img.height.toString() !== img.getAttribute(\"height\");\n      const widthModified = img.width.toString() !== img.getAttribute(\"width\");\n      if (heightModified && !widthModified || !heightModified && widthModified) {\n        (0, _warnonce.warnOnce)('Image with src \"' + src + '\" has either width or height modified, but not the other. If you use CSS to change the size of your image, also include the styles \\'width: \"auto\"\\' or \\'height: \"auto\"\\' to maintain the aspect ratio.');\n      }\n    }\n  });\n}\nfunction getDynamicProps(fetchPriority) {\n  const [majorStr, minorStr] = _react.version.split(\".\");\n  const major = parseInt(majorStr, 10);\n  const minor = parseInt(minorStr, 10);\n  if (major > 18 || major === 18 && minor >= 3) {\n    // In React 18.3.0 or newer, we must use camelCase\n    // prop to avoid \"Warning: Invalid DOM property\".\n    // See https://github.com/facebook/react/pull/25927\n    return {\n      fetchPriority\n    };\n  }\n  // In React 18.2.0 or older, we must use lowercase prop\n  // to avoid \"Warning: Invalid DOM property\".\n  return {\n    fetchpriority: fetchPriority\n  };\n}\nconst ImageElement = /*#__PURE__*/(0, _react.forwardRef)((param, forwardedRef) => {\n  let {\n    imgAttributes,\n    heightInt,\n    widthInt,\n    qualityInt,\n    className,\n    imgStyle,\n    blurStyle,\n    isLazy,\n    fetchPriority,\n    fill,\n    placeholder,\n    loading,\n    srcString,\n    config,\n    unoptimized,\n    loader,\n    onLoadRef,\n    onLoadingCompleteRef,\n    setBlurComplete,\n    setShowAltText,\n    onLoad,\n    onError,\n    ...rest\n  } = param;\n  loading = isLazy ? \"lazy\" : loading;\n  return /*#__PURE__*/_react.default.createElement(\"img\", {\n    ...rest,\n    ...getDynamicProps(fetchPriority),\n    loading: loading,\n    width: widthInt,\n    height: heightInt,\n    decoding: \"async\",\n    \"data-nimg\": fill ? \"fill\" : \"1\",\n    className: className,\n    style: {\n      ...imgStyle,\n      ...blurStyle\n    },\n    ...imgAttributes,\n    ref: (0, _react.useCallback)(img => {\n      if (forwardedRef) {\n        if (typeof forwardedRef === \"function\") forwardedRef(img);else if (typeof forwardedRef === \"object\") {\n          // @ts-ignore - .current is read only it's usually assigned by react internally\n          forwardedRef.current = img;\n        }\n      }\n      if (!img) {\n        return;\n      }\n      if (onError) {\n        // If the image has an error before react hydrates, then the error is lost.\n        // The workaround is to wait until the image is mounted which is after hydration,\n        // then we set the src again to trigger the error handler (if there was an error).\n        // eslint-disable-next-line no-self-assign\n        img.src = img.src;\n      }\n      if (process.env.NODE_ENV !== \"production\") {\n        if (!srcString) {\n          console.error('Image is missing required \"src\" property:', img);\n        }\n        if (img.getAttribute(\"alt\") === null) {\n          console.error('Image is missing required \"alt\" property. Please add Alternative Text to describe the image for screen readers and search engines.');\n        }\n      }\n      if (img.complete) {\n        handleLoading(img, srcString, placeholder, onLoadRef, onLoadingCompleteRef, setBlurComplete, unoptimized);\n      }\n    }, [srcString, placeholder, onLoadRef, onLoadingCompleteRef, setBlurComplete, onError, unoptimized, forwardedRef]),\n    onLoad: event => {\n      const img = event.currentTarget;\n      handleLoading(img, srcString, placeholder, onLoadRef, onLoadingCompleteRef, setBlurComplete, unoptimized);\n    },\n    onError: event => {\n      // if the real image fails to load, this will ensure \"alt\" is visible\n      setShowAltText(true);\n      if (placeholder === \"blur\") {\n        // If the real image fails to load, this will still remove the placeholder.\n        setBlurComplete(true);\n      }\n      if (onError) {\n        onError(event);\n      }\n    }\n  });\n});\nconst Image = /*#__PURE__*/(0, _react.forwardRef)((param, forwardedRef) => {\n  let {\n    src,\n    sizes,\n    unoptimized = false,\n    priority = false,\n    loading,\n    className,\n    quality,\n    width,\n    height,\n    fill,\n    style,\n    onLoad,\n    onLoadingComplete,\n    placeholder = \"empty\",\n    blurDataURL,\n    fetchPriority,\n    layout,\n    objectFit,\n    objectPosition,\n    lazyBoundary,\n    lazyRoot,\n    ...all\n  } = param;\n  const configContext = (0, _react.useContext)(_imageconfigcontext.ImageConfigContext);\n  const config = (0, _react.useMemo)(() => {\n    const c = configEnv || configContext || _imageconfig.imageConfigDefault;\n    const allSizes = [...c.deviceSizes, ...c.imageSizes].sort((a, b) => a - b);\n    const deviceSizes = c.deviceSizes.sort((a, b) => a - b);\n    return {\n      ...c,\n      allSizes,\n      deviceSizes\n    };\n  }, [configContext]);\n  let rest = all;\n  let loader = rest.loader || _imageloader.default;\n  // Remove property so it's not spread on <img> element\n  delete rest.loader;\n  // This special value indicates that the user\n  // didn't define a \"loader\" prop or \"loader\" config.\n  const isDefaultLoader = (\"__next_img_default\" in loader);\n  if (isDefaultLoader) {\n    if (config.loader === \"custom\") {\n      throw new Error('Image with src \"' + src + '\" is missing \"loader\" prop.' + \"\\nRead more: https://nextjs.org/docs/messages/next-image-missing-loader\");\n    }\n  } else {\n    // The user defined a \"loader\" prop or config.\n    // Since the config object is internal only, we\n    // must not pass it to the user-defined \"loader\".\n    const customImageLoader = loader;\n    loader = obj => {\n      const {\n        config: _,\n        ...opts\n      } = obj;\n      return customImageLoader(opts);\n    };\n  }\n  if (layout) {\n    if (layout === \"fill\") {\n      fill = true;\n    }\n    const layoutToStyle = {\n      intrinsic: {\n        maxWidth: \"100%\",\n        height: \"auto\"\n      },\n      responsive: {\n        width: \"100%\",\n        height: \"auto\"\n      }\n    };\n    const layoutToSizes = {\n      responsive: \"100vw\",\n      fill: \"100vw\"\n    };\n    const layoutStyle = layoutToStyle[layout];\n    if (layoutStyle) {\n      style = {\n        ...style,\n        ...layoutStyle\n      };\n    }\n    const layoutSizes = layoutToSizes[layout];\n    if (layoutSizes && !sizes) {\n      sizes = layoutSizes;\n    }\n  }\n  let staticSrc = \"\";\n  let widthInt = getInt(width);\n  let heightInt = getInt(height);\n  let blurWidth;\n  let blurHeight;\n  if (isStaticImport(src)) {\n    const staticImageData = isStaticRequire(src) ? src.default : src;\n    if (!staticImageData.src) {\n      throw new Error(\"An object should only be passed to the image component src parameter if it comes from a static image import. It must include src. Received \" + JSON.stringify(staticImageData));\n    }\n    if (!staticImageData.height || !staticImageData.width) {\n      throw new Error(\"An object should only be passed to the image component src parameter if it comes from a static image import. It must include height and width. Received \" + JSON.stringify(staticImageData));\n    }\n    blurWidth = staticImageData.blurWidth;\n    blurHeight = staticImageData.blurHeight;\n    blurDataURL = blurDataURL || staticImageData.blurDataURL;\n    staticSrc = staticImageData.src;\n    if (!fill) {\n      if (!widthInt && !heightInt) {\n        widthInt = staticImageData.width;\n        heightInt = staticImageData.height;\n      } else if (widthInt && !heightInt) {\n        const ratio = widthInt / staticImageData.width;\n        heightInt = Math.round(staticImageData.height * ratio);\n      } else if (!widthInt && heightInt) {\n        const ratio = heightInt / staticImageData.height;\n        widthInt = Math.round(staticImageData.width * ratio);\n      }\n    }\n  }\n  src = typeof src === \"string\" ? src : staticSrc;\n  let isLazy = !priority && (loading === \"lazy\" || typeof loading === \"undefined\");\n  if (!src || src.startsWith(\"data:\") || src.startsWith(\"blob:\")) {\n    // https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/Data_URIs\n    unoptimized = true;\n    isLazy = false;\n  }\n  if (config.unoptimized) {\n    unoptimized = true;\n  }\n  if (isDefaultLoader && src.endsWith(\".svg\") && !config.dangerouslyAllowSVG) {\n    // Special case to make svg serve as-is to avoid proxying\n    // through the built-in Image Optimization API.\n    unoptimized = true;\n  }\n  if (priority) {\n    fetchPriority = \"high\";\n  }\n  const [blurComplete, setBlurComplete] = (0, _react.useState)(false);\n  const [showAltText, setShowAltText] = (0, _react.useState)(false);\n  const qualityInt = getInt(quality);\n  if (process.env.NODE_ENV !== \"production\") {\n    if (config.output === \"export\" && isDefaultLoader && !unoptimized) {\n      throw new Error(\"Image Optimization using the default loader is not compatible with `{ output: 'export' }`.\\n  Possible solutions:\\n    - Remove `{ output: 'export' }` and run \\\"next start\\\" to run server mode including the Image Optimization API.\\n    - Configure `{ images: { unoptimized: true } }` in `next.config.js` to disable the Image Optimization API.\\n  Read more: https://nextjs.org/docs/messages/export-image-api\");\n    }\n    if (!src) {\n      // React doesn't show the stack trace and there's\n      // no `src` to help identify which image, so we\n      // instead console.error(ref) during mount.\n      unoptimized = true;\n    } else {\n      if (fill) {\n        if (width) {\n          throw new Error('Image with src \"' + src + '\" has both \"width\" and \"fill\" properties. Only one should be used.');\n        }\n        if (height) {\n          throw new Error('Image with src \"' + src + '\" has both \"height\" and \"fill\" properties. Only one should be used.');\n        }\n        if ((style == null ? void 0 : style.position) && style.position !== \"absolute\") {\n          throw new Error('Image with src \"' + src + '\" has both \"fill\" and \"style.position\" properties. Images with \"fill\" always use position absolute - it cannot be modified.');\n        }\n        if ((style == null ? void 0 : style.width) && style.width !== \"100%\") {\n          throw new Error('Image with src \"' + src + '\" has both \"fill\" and \"style.width\" properties. Images with \"fill\" always use width 100% - it cannot be modified.');\n        }\n        if ((style == null ? void 0 : style.height) && style.height !== \"100%\") {\n          throw new Error('Image with src \"' + src + '\" has both \"fill\" and \"style.height\" properties. Images with \"fill\" always use height 100% - it cannot be modified.');\n        }\n      } else {\n        if (typeof widthInt === \"undefined\") {\n          throw new Error('Image with src \"' + src + '\" is missing required \"width\" property.');\n        } else if (isNaN(widthInt)) {\n          throw new Error('Image with src \"' + src + '\" has invalid \"width\" property. Expected a numeric value in pixels but received \"' + width + '\".');\n        }\n        if (typeof heightInt === \"undefined\") {\n          throw new Error('Image with src \"' + src + '\" is missing required \"height\" property.');\n        } else if (isNaN(heightInt)) {\n          throw new Error('Image with src \"' + src + '\" has invalid \"height\" property. Expected a numeric value in pixels but received \"' + height + '\".');\n        }\n      }\n    }\n    if (!VALID_LOADING_VALUES.includes(loading)) {\n      throw new Error('Image with src \"' + src + '\" has invalid \"loading\" property. Provided \"' + loading + '\" should be one of ' + VALID_LOADING_VALUES.map(String).join(\",\") + \".\");\n    }\n    if (priority && loading === \"lazy\") {\n      throw new Error('Image with src \"' + src + '\" has both \"priority\" and \"loading=\\'lazy\\'\" properties. Only one should be used.');\n    }\n    if (placeholder === \"blur\") {\n      if (widthInt && heightInt && widthInt * heightInt < 1600) {\n        (0, _warnonce.warnOnce)('Image with src \"' + src + '\" is smaller than 40x40. Consider removing the \"placeholder=\\'blur\\'\" property to improve performance.');\n      }\n      if (!blurDataURL) {\n        const VALID_BLUR_EXT = [\"jpeg\", \"png\", \"webp\", \"avif\"] // should match next-image-loader\n        ;\n\n        throw new Error('Image with src \"' + src + '\" has \"placeholder=\\'blur\\'\" property but is missing the \"blurDataURL\" property.\\n          Possible solutions:\\n            - Add a \"blurDataURL\" property, the contents should be a small Data URL to represent the image\\n            - Change the \"src\" property to a static import with one of the supported file types: ' + VALID_BLUR_EXT.join(\",\") + '\\n            - Remove the \"placeholder\" property, effectively no blur effect\\n          Read more: https://nextjs.org/docs/messages/placeholder-blur-data-url');\n      }\n    }\n    if (\"ref\" in rest) {\n      (0, _warnonce.warnOnce)('Image with src \"' + src + '\" is using unsupported \"ref\" property. Consider using the \"onLoadingComplete\" property instead.');\n    }\n    if (!unoptimized && loader !== _imageloader.default) {\n      const urlStr = loader({\n        config,\n        src,\n        width: widthInt || 400,\n        quality: qualityInt || 75\n      });\n      let url;\n      try {\n        url = new URL(urlStr);\n      } catch (err) {}\n      if (urlStr === src || url && url.pathname === src && !url.search) {\n        (0, _warnonce.warnOnce)('Image with src \"' + src + '\" has a \"loader\" property that does not implement width. Please implement it or use the \"unoptimized\" property instead.' + \"\\nRead more: https://nextjs.org/docs/messages/next-image-missing-loader-width\");\n      }\n    }\n    for (const [legacyKey, legacyValue] of Object.entries({\n      layout,\n      objectFit,\n      objectPosition,\n      lazyBoundary,\n      lazyRoot\n    })) {\n      if (legacyValue) {\n        (0, _warnonce.warnOnce)('Image with src \"' + src + '\" has legacy prop \"' + legacyKey + '\". Did you forget to run the codemod?' + \"\\nRead more: https://nextjs.org/docs/messages/next-image-upgrade-to-13\");\n      }\n    }\n    if (typeof window !== \"undefined\" && !perfObserver && window.PerformanceObserver) {\n      perfObserver = new PerformanceObserver(entryList => {\n        for (const entry of entryList.getEntries()) {\n          var _entry_element;\n          // @ts-ignore - missing \"LargestContentfulPaint\" class with \"element\" prop\n          const imgSrc = (entry == null ? void 0 : (_entry_element = entry.element) == null ? void 0 : _entry_element.src) || \"\";\n          const lcpImage = allImgs.get(imgSrc);\n          if (lcpImage && !lcpImage.priority && lcpImage.placeholder !== \"blur\" && !lcpImage.src.startsWith(\"data:\") && !lcpImage.src.startsWith(\"blob:\")) {\n            // https://web.dev/lcp/#measure-lcp-in-javascript\n            (0, _warnonce.warnOnce)('Image with src \"' + lcpImage.src + '\" was detected as the Largest Contentful Paint (LCP). Please add the \"priority\" property if this image is above the fold.' + \"\\nRead more: https://nextjs.org/docs/api-reference/next/image#priority\");\n          }\n        }\n      });\n      try {\n        perfObserver.observe({\n          type: \"largest-contentful-paint\",\n          buffered: true\n        });\n      } catch (err) {\n        // Log error but don't crash the app\n        console.error(err);\n      }\n    }\n  }\n  const imgStyle = Object.assign(fill ? {\n    position: \"absolute\",\n    height: \"100%\",\n    width: \"100%\",\n    left: 0,\n    top: 0,\n    right: 0,\n    bottom: 0,\n    objectFit,\n    objectPosition\n  } : {}, showAltText ? {} : {\n    color: \"transparent\"\n  }, style);\n  const blurStyle = placeholder === \"blur\" && blurDataURL && !blurComplete ? {\n    backgroundSize: imgStyle.objectFit || \"cover\",\n    backgroundPosition: imgStyle.objectPosition || \"50% 50%\",\n    backgroundRepeat: \"no-repeat\",\n    backgroundImage: 'url(\"data:image/svg+xml;charset=utf-8,' + (0, _imageblursvg.getImageBlurSvg)({\n      widthInt,\n      heightInt,\n      blurWidth,\n      blurHeight,\n      blurDataURL,\n      objectFit: imgStyle.objectFit\n    }) + '\")'\n  } : {};\n  if (process.env.NODE_ENV === \"development\") {\n    if (blurStyle.backgroundImage && (blurDataURL == null ? void 0 : blurDataURL.startsWith(\"/\"))) {\n      // During `next dev`, we don't want to generate blur placeholders with webpack\n      // because it can delay starting the dev server. Instead, `next-image-loader.js`\n      // will inline a special url to lazily generate the blur placeholder at request time.\n      blurStyle.backgroundImage = 'url(\"' + blurDataURL + '\")';\n    }\n  }\n  const imgAttributes = generateImgAttrs({\n    config,\n    src,\n    unoptimized,\n    width: widthInt,\n    quality: qualityInt,\n    sizes,\n    loader\n  });\n  let srcString = src;\n  if (process.env.NODE_ENV !== \"production\") {\n    if (typeof window !== \"undefined\") {\n      let fullUrl;\n      try {\n        fullUrl = new URL(imgAttributes.src);\n      } catch (e) {\n        fullUrl = new URL(imgAttributes.src, window.location.href);\n      }\n      allImgs.set(fullUrl.href, {\n        src,\n        priority,\n        placeholder\n      });\n    }\n  }\n  const onLoadRef = (0, _react.useRef)(onLoad);\n  (0, _react.useEffect)(() => {\n    onLoadRef.current = onLoad;\n  }, [onLoad]);\n  const onLoadingCompleteRef = (0, _react.useRef)(onLoadingComplete);\n  (0, _react.useEffect)(() => {\n    onLoadingCompleteRef.current = onLoadingComplete;\n  }, [onLoadingComplete]);\n  const imgElementArgs = {\n    isLazy,\n    imgAttributes,\n    heightInt,\n    widthInt,\n    qualityInt,\n    className,\n    imgStyle,\n    blurStyle,\n    loading,\n    config,\n    fetchPriority,\n    fill,\n    unoptimized,\n    placeholder,\n    loader,\n    srcString,\n    onLoadRef,\n    onLoadingCompleteRef,\n    setBlurComplete,\n    setShowAltText,\n    ...rest\n  };\n  return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(ImageElement, {\n    ...imgElementArgs,\n    ref: forwardedRef\n  }), priority ?\n  // Note how we omit the `href` attribute, as it would only be relevant\n  // for browsers that do not support `imagesrcset`, and in those cases\n  // it would likely cause the incorrect image to be preloaded.\n  //\n  // https://html.spec.whatwg.org/multipage/semantics.html#attr-link-imagesrcset\n  /*#__PURE__*/\n  _react.default.createElement(_head.default, null, /*#__PURE__*/_react.default.createElement(\"link\", {\n    key: \"__nimg-\" + imgAttributes.src + imgAttributes.srcSet + imgAttributes.sizes,\n    rel: \"preload\",\n    as: \"image\",\n    href: imgAttributes.srcSet ? undefined : imgAttributes.src,\n    imageSrcSet: imgAttributes.srcSet,\n    imageSizes: imgAttributes.sizes,\n    crossOrigin: rest.crossOrigin,\n    referrerPolicy: rest.referrerPolicy,\n    ...getDynamicProps(fetchPriority)\n  })) : null);\n});\nconst _default = Image;\nif ((typeof exports.default === 'function' || typeof exports.default === 'object' && exports.default !== null) && typeof exports.default.__esModule === 'undefined') {\n  Object.defineProperty(exports.default, '__esModule', {\n    value: true\n  });\n  Object.assign(exports.default, exports);\n  module.exports = exports.default;\n}","map":{"version":3,"names":["_","require","_imageloader","_interop_require_default","configEnv","process","env","__NEXT_IMAGE_OPTS","allImgs","Map","perfObserver","window","globalThis","__NEXT_IMAGE_IMPORTED","VALID_LOADING_VALUES","undefined","isStaticRequire","src","default","isStaticImageData","isStaticImport","getWidths","param","width","sizes","deviceSizes","allSizes","viewportWidthRe","percentSizes","match","exec","push","parseInt","length","smallestRatio","Math","min","widths","filter","s","kind","Set","map","w","find","p","generateImgAttrs","config","unoptimized","quality","loader","srcSet","last","i","join","getInt","x","Number","isFinite","NaN","test","handleLoading","img","placeholder","onLoadRef","onLoadingCompleteRef","setBlurComplete","decode","Promise","resolve","then","parentElement","isConnected","current","event","Event","defineProperty","writable","value","prevented","stopped","nativeEvent","currentTarget","target","isDefaultPrevented","isPropagationStopped","persist","preventDefault","stopPropagation","NODE_ENV","getAttribute","widthViewportRatio","getBoundingClientRect","innerWidth","_warnonce","warnOnce","position","getComputedStyle","valid","includes","String","height","heightModified","toString","widthModified","getDynamicProps","fetchPriority","majorStr","minorStr","_react","version","split","major","minor","fetchpriority","forwardRef","forwardedRef","imgAttributes","heightInt","widthInt","qualityInt","className","imgStyle","blurStyle","isLazy","fill","loading","srcString","setShowAltText","onLoad","onError","rest","createElement","decoding","useCallback","console","error","complete","priority","style","onLoadingComplete","blurDataURL","layout","objectFit","objectPosition","lazyBoundary","lazyRoot","all","configContext","useContext","_imageconfigcontext","ImageConfigContext","useMemo","c","_imageconfig","imageConfigDefault","imageSizes","sort","a","b","isDefaultLoader","Error","customImageLoader","obj","opts","layoutToStyle","maxWidth","layoutToSizes","responsive","layoutStyle","layoutSizes","staticSrc","blurWidth","blurHeight","staticImageData","JSON","stringify","ratio","round","startsWith","endsWith","dangerouslyAllowSVG","blurComplete","useState","showAltText","output","isNaN","VALID_BLUR_EXT","urlStr","url","URL","err","pathname","search","legacyKey","legacyValue","Object","entries","PerformanceObserver","entryList","entry","getEntries","_entry_element","imgSrc","element","lcpImage","get","observe","type","buffered","assign","left","top","right","bottom","color","backgroundSize","backgroundPosition","backgroundRepeat","_imageblursvg","getImageBlurSvg","backgroundImage","fullUrl","e","location","href","set","useRef","useEffect","imgElementArgs","Fragment","ImageElement","ref","_head","key","rel","as","imageSrcSet","crossOrigin","referrerPolicy"],"sources":["../../src/client/image.tsx"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}